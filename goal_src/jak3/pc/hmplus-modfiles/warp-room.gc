(in-package goal)

;name: desert-storm.gc

(defun run-warp-room ()
    (when ;wasdoors gates spawn
        (and
            (= (pause-allowed?) #t)
            *target*
            (= test-level-loaded? #f)
            (= weather-dark-mode #f)
            (= (-> (level-get-target-inside *level*) name) 'wasdoors)
        )
            (let ((dark-v (new 'static 'vector  :x (meters 2254.46)  :y (meters 30.70)  :z (meters 149.23)  :w 1.0)))
                (spawn-warp-gate dark-v "warp-gate-dark" 90)
        )
        (let ((level-mine (new 'static 'vector  :x (meters 2296.7170)  :y (meters 32.5345)  :z (meters 153.7440)  :w 1.0)))
                (spawn-warp-gate level-mine "warp-gate-mine-overworld" 94)
        )
        (set! test-level-loaded? #t)
    )

    (when ;wasdoors warp gates despawn
        (and
            (= (pause-allowed?) #t)
            *target*
            (= test-level-loaded? #t)
            (or 
                (!= (-> (level-get-target-inside *level*) name) 'wasdoors)
                (= weather-dark-mode #t)
            )
        )
        (set! test-level-loaded? #f)
        (set! *warp-gate-dark* #f)
        (kill-by-name "warp-gate-dark" *default-pool*)
        (kill-by-name "warp-gate-mine-overworld" *default-pool*)
    )

    (when ;desert dark gate spawn
        (and
            (= (pause-allowed?) #t)
            *target*
            (= test-level-loaded-dark? #f)
            (= weather-dark-mode #t)
            (= in-pre-tutorial? #f)
            (= (-> (level-get-target-inside *level*) name) 'desert)
        )
            (let ((dark-v (new 'static 'vector  :x (meters 2384.7390)  :y (meters 36.5538)  :z (meters 537.5184)  :w 1.0)))
                (spawn-warp-gate-dark dark-v "warp-gate-overworld" 90)
        )
        (set! test-level-loaded-dark? #t)
    )
    
    (when 
        (and ;desert dark gate despawn
            (= (pause-allowed?) #t)
            *target*
            (or
                (= weather-dark-mode #f)
                (!= (-> (level-get-target-inside *level*) name) 'desert)
            )
            (= test-level-loaded-dark? #t)
        )
            (set! test-level-loaded-dark? #f)
            (kill-by-name "warp-gate-overworld" *default-pool*)
    )

    (when ;minea gate spawn
        (and
            (= (pause-allowed?) #t)
            *target*
            (= test-level-loaded-mine? #f)
            (= in-pre-tutorial? #f)
            (= (-> (level-get-target-inside *level*) name) 'minec)
        )
            (let ((minea (new 'static 'vector :x (meters 248.4198) :y (meters 97.9794) :z (meters -6.5898) :w 1.0)))
                (spawn-warp-gate-dark minea "warp-gate-mine" 90)
        )
        (set! test-level-loaded-mine? #t)
    )
    
    (when 
        (and ;minea gate despawn
            (= (pause-allowed?) #t)
            *target*
            (!= (-> (level-get-target-inside *level*) name) 'minec)
            (= test-level-loaded-mine? #t)
        )
            (set! test-level-loaded-mine? #f)
            (kill-by-name "warp-gate-mine" *default-pool*)
    )


    #|(when 
        (and
            *target*
            (not *scene-player*)
            (task-node-closed? (game-task-node wascity-chase-introduction))
        )
        (let (
                (door-small (entity-by-name "wascity-airlock-small-1"))
                (r (region-lookup-by-id 1163))
            )
            (when door-small
                (let ((vec 
                        (new 'static 'vector  
                        :x (meters 2264.7636)  
                        :y (meters 31.5958)  
                        :z (meters 125.8531)  
                        :w 1.0)
                        )
                    )
                    (when 
                        (and 
                            (= warp-room-tutorial? #f)
                            (< (vector-vector-distance (target-pos 0) vec) 1199000.0)
                        )
                        (spawn-warp-gate vec "warp-gate-dark-intro" 90)
                        (set! warp-room-tutorial? #t)
                        (print "|||||||| INIT |||||||| warp-gate-dark-intro")
                    )
                    (when 
                        (and 
                            (= warp-room-tutorial? #t)
                            (>= (vector-vector-distance (target-pos 0) vec) 1200000.0)
                        )
                        (kill-by-name "warp-gate-dark-intro" *default-pool*)
                        (set! warp-room-tutorial? #f)
                        (print "|||||||| KILLED |||||||| warp-gate-intro")
                    )
                )
            )
        )
    )|#

    ;; === warp-room ===
    ;; 
    #|(let (
                (door-small (entity-by-name "wascity-airlock-small-1"))
                (r (region-lookup-by-id 1163))
            )
        (when door-small 
            (set! (cdr (res-lump-struct door-small 'on-activate pair)) 
            '('wasall 'wascitya 'wasdoors 'waswide 'test-zone)
        )
        )
    ;;     (when r
    ;;        (set! (-> r on-enter) '(begin (want-display `wasdoors 'display 'test-zone 'testzone) (want-sound 'wasall1 'wascity1 'desert1)))
    ;;     )
        )|#

    (none)
)